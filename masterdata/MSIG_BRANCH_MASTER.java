/*
  This class has been generated by the Code Generator
 */

package com.msig.masterdata;

import java.util.Date;

import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.DMLStatement;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.eibus.util.logger.CordysLogger;
import com.eibus.xml.nom.Node;
import com.eibus.xml.xpath.XPath;

public class MSIG_BRANCH_MASTER extends MSIG_BRANCH_MASTERBase {
	private static final String STATUS_INACTIVE = "INACTIVE";
	private static final String STATUS_ACTIVE = "ACTIVE";

	public MSIG_BRANCH_MASTER() {
		this((BusObjectConfig) null);
	}

	public MSIG_BRANCH_MASTER(BusObjectConfig config) {
		super(config);
	}

	@Override
	public void onBeforeInsert() {
		super.onBeforeInsert();

		if (this.getSTATUS() == null
				|| (this.getSTATUS() != null && this.getSTATUS().equals(""))) {
			this.setSTATUS(STATUS_ACTIVE);
		}

		this.setCREATED_BY(MasterDataUtil.getUserName());
		this.setMODIFIED_BY(MasterDataUtil.getUserName());
		this.setCREATED_ON(new Date());
		this.setMODIFIED_ON(new Date());
	}

	@SuppressWarnings("deprecation")
	@Override
	public void onAfterUpdate() {
		super.onAfterUpdate();

		String status = this.getSTATUS();
		if (status.equals(STATUS_INACTIVE)) {
			String queryText = "UPDATE MSIG_BRANCH_LOB_MAPPING SET STATUS = '" + STATUS_INACTIVE + "' WHERE BRANCH_CODE = '" + this.getBRANCH_CODE() + "'";
			
			DMLStatement dmlObj = new DMLStatement(queryText);
			dmlObj.execute();
			
			queryText = "UPDATE MSIG_BRANCH_LOB_ROLE_MAPPING SET STATUS = '" + STATUS_INACTIVE + "' WHERE BRANCH_CODE = '" + this.getBRANCH_CODE() + "'";
			dmlObj = new DMLStatement(queryText);
			
			dmlObj.execute();
			
			queryText = "UPDATE MSIG_BRANCH_LOB_ROLE_USER_MAPPING SET STATUS = '" + STATUS_INACTIVE + "' WHERE BRANCH_CODE = '" + this.getBRANCH_CODE() + "'";
			dmlObj = new DMLStatement(queryText);
			
			dmlObj.execute();
		}
	}

	@Override
	public void onBeforeUpdate() {
		super.onBeforeUpdate();
		this.setMODIFIED_BY(MasterDataUtil.getUserName());
		this.setMODIFIED_ON(new Date());
	}

	public static BusObjectIterator<com.msig.masterdata.MSIG_BRANCH_MASTER> searchBranchMaster(
			String BRANCH_CODE, String BRANCH_NAME) {
		BRANCH_CODE = "%" + BRANCH_CODE + "%";
		BRANCH_NAME = "%" + BRANCH_NAME + "%";

		String queryText = "SELECT * FROM MSIG_BRANCH_MASTER WHERE BRANCH_CODE LIKE :BRANCH_CODE AND BRANCH_NAME LIKE :BRANCH_NAME";

		QueryObject query = new QueryObject(queryText);
		query.addParameter("BRANCH_CODE", "MSIG_BRANCH_MASTER.BRANCH_CODE",
				QueryObject.PARAM_STRING, BRANCH_CODE);
		query.addParameter("BRANCH_NAME", "MSIG_BRANCH_MASTER.BRANCH_NAME",
				QueryObject.PARAM_STRING, BRANCH_NAME);

		query.setResultClass(MSIG_BRANCH_MASTER.class);
		return query.getObjects();
	}

	public static BusObjectIterator<com.msig.masterdata.MSIG_BRANCH_MASTER> searchBranchMasterByApplication(
			String APPLICATION, String BRANCH_CODE, String BRANCH_NAME) {
		
		APPLICATION = "%" + APPLICATION + "%";
		BRANCH_CODE = "%" + BRANCH_CODE + "%";
		BRANCH_NAME = "%" + BRANCH_NAME + "%";

		String queryText = "SELECT * FROM MSIG_BRANCH_MASTER WHERE APPLICATION LIKE :APPLICATION AND BRANCH_CODE LIKE :BRANCH_CODE AND BRANCH_NAME LIKE :BRANCH_NAME ORDER BY APPLICATION";

		QueryObject query = new QueryObject(queryText);
		query.addParameter("BRANCH_CODE", "MSIG_BRANCH_MASTER.BRANCH_CODE",
				QueryObject.PARAM_STRING, BRANCH_CODE);
		query.addParameter("BRANCH_NAME", "MSIG_BRANCH_MASTER.BRANCH_NAME",
				QueryObject.PARAM_STRING, BRANCH_NAME);
		query.addParameter("APPLICATION", "MSIG_BRANCH_MASTER.APPLICATION",
				QueryObject.PARAM_STRING, APPLICATION);
		
		query.setResultClass(MSIG_BRANCH_MASTER.class);
		return query.getObjects();
	}
	
	public static BusObjectIterator<com.msig.masterdata.MSIG_BRANCH_MASTER> searchBranchMasterByApplicationNew(
			String APPLICATION, String BRANCH_CODE, String BRANCH_NAME) {
		
		APPLICATION = "%" + APPLICATION + "%";
		BRANCH_CODE = "%" + BRANCH_CODE + "%";
		BRANCH_NAME = "%" + BRANCH_NAME + "%";

		String queryText = "SELECT * FROM MSIG_BRANCH_MASTER WHERE APPLICATION LIKE :APPLICATION AND BRANCH_CODE LIKE :BRANCH_CODE AND BRANCH_NAME LIKE :BRANCH_NAME ORDER BY APPLICATION";

		QueryObject query = new QueryObject(queryText);
		query.addParameter("BRANCH_CODE", "MSIG_BRANCH_MASTER.BRANCH_CODE",
				QueryObject.PARAM_STRING, BRANCH_CODE);
		query.addParameter("BRANCH_NAME", "MSIG_BRANCH_MASTER.BRANCH_NAME",
				QueryObject.PARAM_STRING, BRANCH_NAME);
		query.addParameter("APPLICATION", "MSIG_BRANCH_MASTER.APPLICATION",
				QueryObject.PARAM_STRING, APPLICATION);
		
		query.setResultClass(MSIG_BRANCH_MASTER.class);
		return query.getObjects();
	}

	public static MSIG_BRANCH_MASTER getMsigBranchNameRecord(String APPLICATION, String BRANCH_NAME) {
		String queryText = "SELECT * FROM MSIG_BRANCH_MASTER WHERE APPLICATION = :APPLICATION AND BRANCH_NAME = :BRANCH_NAME";

		QueryObject query = new QueryObject(queryText);
		query.addParameter("BRANCH_NAME", "MSIG_BRANCH_MASTER.BRANCH_CODE", QueryObject.PARAM_STRING, BRANCH_NAME);
		query.addParameter("APPLICATION", "MSIG_BRANCH_MASTER.APPLICATION", QueryObject.PARAM_STRING, APPLICATION);

		query.setResultClass(MSIG_BRANCH_MASTER.class);
		return (MSIG_BRANCH_MASTER) query.getObject();
	}

	public static int generateBranchMasterReport(int timezoneOffset)
			throws Exception {

		String queryText = "SELECT A.APPLICATION, A.BRANCH_CODE, A.BRANCH_NAME, A.BRANCH_DESCRIPTION, A.STATUS, A.CREATED_BY, A.CREATED_ON, A.MODIFIED_BY, A.MODIFIED_ON FROM MSIG_BRANCH_MASTER A ORDER BY APPLICATION";

		QueryObject query = new QueryObject(queryText);
		query.setResultClass(MSIG_BRANCH_MASTER.class);

		BusObjectIterator<MSIG_BRANCH_MASTER> objects = query.getObjects();

		if (objects == null) {
			return MasterDataUtil
					.createFaultMessage("No records in DB to download excel file");
		}

		String[] paramNames = { "key" };
		String[] paramValues = { "/MSIG/configurations/shared-path-config.xml" };

		int response = MasterDataUtil.executeSOAPRequest(
				"http://schemas.cordys.com/1.0/xmlstore", "GetXMLObject",
				paramNames, paramValues);

		if (response == 0) {
			return MasterDataUtil
					.createFaultMessage("Shared Path Configuration file is missing");
		}

		String sharedFilePath = Node
				.getData(XPath
						.getFirstMatch(
								"descendant-or-self::Configuration/descendant-or-self::SharedPath",
								null, response));

		HSSFWorkbook workbookObject = GenerateReport.getWorkbookObjectNew(
				objects, "Branch Master Report", new String[] {
						"Application", "Branch Code", "Branch Name",
						"Branch Description", "Status", 
						"Created By", "Created On", "Modified By", "Modified On" },
				new String[] { "APPLICATION", "BRANCH_CODE", "BRANCH_NAME",
						"BRANCH_DESCRIPTION", "STATUS",
						"CREATED_BY", "CREATED_ON", "MODIFIED_BY", "MODIFIED_ON" },
				new String[] { "STRING", "STRING", "STRING", 
						"STRING", "STRING", 
						"STRING", "DATE", "STRING", "DATE" },
				timezoneOffset);
		HSSFSheet sheet = workbookObject.getSheet("Branch Master Report");
		int columnIndex = 0;
		while (columnIndex < 11) {
			sheet.autoSizeColumn(columnIndex++);
		}

		return GenerateReport.writeExcelFile(workbookObject, sharedFilePath,
				"Branch Master Report");
	}
	
	public static BusObjectIterator<MSIG_BRANCH_MASTER> getHandlingBranchListForCMS() {
		String queryText = "SELECT DISTINCT BRANCH_CODE, BRANCH_NAME, SERVICING_BRANCHES FROM ( " +
				"Select DISTINCT Main.BC as BRANCH_CODE, Main.BN as BRANCH_NAME, Left(Main.MSIG_BRANCH_MASTER,Len(Main.MSIG_BRANCH_MASTER)-1) As \"SERVICING_BRANCHES\" " +
				"From ( " +
				"        Select ( " +
				"                Select '''' + ST1.BRANCH_CODE + ' : ' + ST1.BRANCH_NAME + ''',' AS [text()] " + 
				"                From dbo.MSIG_BRANCH_MASTER ST1 " +
				"                Where ST1.SERVICING_BRANCH = ST2.SERVICING_BRANCH " +
				"                For XML PATH ('') " +
				"            ) [MSIG_BRANCH_MASTER], ST2.BRANCH_CODE as [BC], ST2.BRANCH_NAME as [BN] " +
				"        From dbo.MSIG_BRANCH_MASTER ST2 " + 
				"    ) [Main] " +
				") AS [MAIN2] WHERE BRANCH_CODE IN (SELECT SERVICING_BRANCH FROM MSIG_BRANCH_MASTER)";
		
		QueryObject query = new QueryObject(queryText);
		query.setResultClass(MSIG_BRANCH_MASTER.class);
		
		return query.getObjects();
	}

	public static BusObjectIterator<MSIG_BRANCH_LOB_MAPPING> checkMappingsForBranch(String APPLICATION, String BRANCH_CODE) {
		String queryText = "SELECT * FROM MSIG_BRANCH_LOB_MAPPING WHERE BRANCH_CODE = :BRANCH_CODE AND APPLICATION = :APPLICATION";
		
		QueryObject query = new QueryObject(queryText);
		query.addParameter("BRANCH_CODE", "MSIG_BRANCH_LOB_MAPPING.BRANCH_CODE", QueryObject.PARAM_STRING, BRANCH_CODE);
		query.addParameter("APPLICATION", "MSIG_BRANCH_LOB_MAPPING.APPLICATION", QueryObject.PARAM_STRING, APPLICATION);
		
		query.setResultClass(MSIG_BRANCH_LOB_MAPPING.class);
		
		return query.getObjects();
	}
	
	public static MSIG_BRANCH_MASTER getBranchMasterObj(String APPLICATION, String BRANCH_CODE) {
		String queryText = "SELECT * FROM MSIG_BRANCH_MASTER WHERE BINARY_CHECKSUM(APPLICATION) = BINARY_CHECKSUM(:APPLICATION) AND BINARY_CHECKSUM(BRANCH_CODE) = BINARY_CHECKSUM(:BRANCH_CODE)";
		
		QueryObject query = new QueryObject(queryText);
		
		query.addParameter("APPLICATION", "MSIG_BRANCH_MASTER.APPLICATION", QueryObject.PARAM_STRING, APPLICATION);
		query.addParameter("BRANCH_CODE", "MSIG_BRANCH_MASTER.BRANCH_CODE", QueryObject.PARAM_STRING, BRANCH_CODE);
		
		query.setResultClass(MSIG_BRANCH_MASTER.class);
		
		return (MSIG_BRANCH_MASTER) query.getObject();
	}
	
}
