/*
  This class has been generated by the Code Generator
*/

package com.msig.masterdata;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.classinfo.AttributeInfo;
import com.cordys.cpc.bsf.classinfo.ClassInfo;
import com.cordys.cpc.bsf.classinfo.RelationInfo_FK;
import com.cordys.cpc.bsf.listeners.constraint.StringValidator;


public abstract class MSIG_BRANCH_LOB_ROLE_USER_MAPPINGBase extends com.cordys.cpc.bsf.busobject.StateBusObject
{
    // tags used in the XML document
    public final static String ATTR_APPLICATION = "APPLICATION";
    public final static String ATTR_BRANCH_CODE = "BRANCH_CODE";
    public final static String ATTR_LOB_CODE = "LOB_CODE";
    public final static String ATTR_ROLE_CODE = "ROLE_CODE";
    public final static String ATTR_USER_ID = "USER_ID";
    public final static String ATTR_IS_LEAD = "IS_LEAD";
    public final static String ATTR_STATUS = "STATUS";
    public final static String ATTR_REMARKS = "REMARKS";
    public final static String ATTR_CREATED_BY = "CREATED_BY";
    public final static String ATTR_CREATED_ON = "CREATED_ON";
    public final static String ATTR_MODIFIED_BY = "MODIFIED_BY";
    public final static String ATTR_MODIFIED_ON = "MODIFIED_ON";
    private final static String REL_USER_IDObject = "FK:MSIG_BRANCH_LOB_ROLE_USER_MAPPING[USER_ID]:MSIG_USERS_MASTER[USER_ID]";
    private static ClassInfo s_classInfo = null;
    public static ClassInfo _getClassInfo()//NOPMD framework ensures this is thread safe
    {
        if ( s_classInfo == null )//NOPMD
        {
            s_classInfo = newClassInfo(MSIG_BRANCH_LOB_ROLE_USER_MAPPING.class);
            s_classInfo.setTableName("MSIG_BRANCH_LOB_ROLE_USER_MAPPING");
            s_classInfo.setUIDElements(new String[]{ATTR_APPLICATION, ATTR_BRANCH_CODE, ATTR_LOB_CODE, ATTR_ROLE_CODE, ATTR_USER_ID});
            {
                AttributeInfo ai = new AttributeInfo(ATTR_APPLICATION);
                ai.setJavaName(ATTR_APPLICATION);
                ai.setColumnName(ATTR_APPLICATION);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_APPLICATION);
                v.setMaxLength(10);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_BRANCH_CODE);
                ai.setJavaName(ATTR_BRANCH_CODE);
                ai.setColumnName(ATTR_BRANCH_CODE);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_BRANCH_CODE);
                v.setMaxLength(20);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_LOB_CODE);
                ai.setJavaName(ATTR_LOB_CODE);
                ai.setColumnName(ATTR_LOB_CODE);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_LOB_CODE);
                v.setMaxLength(20);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ROLE_CODE);
                ai.setJavaName(ATTR_ROLE_CODE);
                ai.setColumnName(ATTR_ROLE_CODE);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_ROLE_CODE);
                v.setMaxLength(20);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_USER_ID);
                ai.setJavaName(ATTR_USER_ID);
                ai.setColumnName(ATTR_USER_ID);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_USER_ID);
                v.setMaxLength(20);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_IS_LEAD);
                ai.setJavaName(ATTR_IS_LEAD);
                ai.setColumnName(ATTR_IS_LEAD);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_IS_LEAD);
                v.setMaxLength(1);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_STATUS);
                ai.setJavaName(ATTR_STATUS);
                ai.setColumnName(ATTR_STATUS);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_STATUS);
                v.setMaxLength(10);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_REMARKS);
                ai.setJavaName(ATTR_REMARKS);
                ai.setColumnName(ATTR_REMARKS);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_REMARKS);
                v.setMaxLength(500);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_CREATED_BY);
                ai.setJavaName(ATTR_CREATED_BY);
                ai.setColumnName(ATTR_CREATED_BY);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_CREATED_BY);
                v.setMaxLength(50);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_CREATED_ON);
                ai.setJavaName(ATTR_CREATED_ON);
                ai.setColumnName(ATTR_CREATED_ON);
                ai.setAttributeClass(java.util.Date.class);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_MODIFIED_BY);
                ai.setJavaName(ATTR_MODIFIED_BY);
                ai.setColumnName(ATTR_MODIFIED_BY);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_MODIFIED_BY);
                v.setMaxLength(50);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_MODIFIED_ON);
                ai.setJavaName(ATTR_MODIFIED_ON);
                ai.setColumnName(ATTR_MODIFIED_ON);
                ai.setAttributeClass(java.util.Date.class);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                // relation USER_IDObject (FK:MSIG_BRANCH_LOB_ROLE_USER_MAPPING[USER_ID]:MSIG_USERS_MASTER[USER_ID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_USER_IDObject);
                ri.setName("USER_IDObject");
                ri.setLocalAttributes(new String[]{ATTR_USER_ID});
                ri.setLocalIsPK(false);
                ri.setRelatedClass(com.msig.masterdata.MSIG_USERS_MASTER.class);
                ri.setRelatedAttributes(new String[]{"USER_ID"});//NOPMD
                ri.setRelatedIdentifier("FK:MSIG_USERS_MASTER[USER_ID]:MSIG_BRANCH_LOB_ROLE_USER_MAPPING[USER_ID]");
                ri.setLoadMethod("loadUSER_IDObject");
                s_classInfo.addRelationInfo(ri);
            }
        }
        return s_classInfo;
    }

    public MSIG_BRANCH_LOB_ROLE_USER_MAPPINGBase(BusObjectConfig config)
    {
        super(config);
    }

    public String getAPPLICATION()
    {
        return getStringProperty(ATTR_APPLICATION);
    }

    public void setAPPLICATION(String value)
    {
        setProperty(ATTR_APPLICATION, value, 0);
    }

    public String getBRANCH_CODE()
    {
        return getStringProperty(ATTR_BRANCH_CODE);
    }

    public void setBRANCH_CODE(String value)
    {
        setProperty(ATTR_BRANCH_CODE, value, 0);
    }

    public String getLOB_CODE()
    {
        return getStringProperty(ATTR_LOB_CODE);
    }

    public void setLOB_CODE(String value)
    {
        setProperty(ATTR_LOB_CODE, value, 0);
    }

    public String getROLE_CODE()
    {
        return getStringProperty(ATTR_ROLE_CODE);
    }

    public void setROLE_CODE(String value)
    {
        setProperty(ATTR_ROLE_CODE, value, 0);
    }

    public String getUSER_ID()
    {
        return getStringProperty(ATTR_USER_ID);
    }

    public void setUSER_ID(String value)
    {
        String[] relations = new String[]{REL_USER_IDObject};
        this.updateSingleRelations(relations, false);
        setProperty(ATTR_USER_ID, value, 0);
        this.updateSingleRelations(relations, true);
    }

    public String getIS_LEAD()
    {
        return getStringProperty(ATTR_IS_LEAD);
    }

    public void setIS_LEAD(String value)
    {
        setProperty(ATTR_IS_LEAD, value, 0);
    }

    public String getSTATUS()
    {
        return getStringProperty(ATTR_STATUS);
    }

    public void setSTATUS(String value)
    {
        setProperty(ATTR_STATUS, value, 0);
    }

    public String getREMARKS()
    {
        return getStringProperty(ATTR_REMARKS);
    }

    public void setREMARKS(String value)
    {
        setProperty(ATTR_REMARKS, value, 0);
    }

    public String getCREATED_BY()
    {
        return getStringProperty(ATTR_CREATED_BY);
    }

    public void setCREATED_BY(String value)
    {
        setProperty(ATTR_CREATED_BY, value, 0);
    }

    public java.util.Date getCREATED_ON()
    {
        return getDateTimestampProperty(ATTR_CREATED_ON);
    }

    public void setCREATED_ON(java.util.Date value)
    {
        setProperty(ATTR_CREATED_ON, value, 0);
    }

    public String getMODIFIED_BY()
    {
        return getStringProperty(ATTR_MODIFIED_BY);
    }

    public void setMODIFIED_BY(String value)
    {
        setProperty(ATTR_MODIFIED_BY, value, 0);
    }

    public java.util.Date getMODIFIED_ON()
    {
        return getDateTimestampProperty(ATTR_MODIFIED_ON);
    }

    public void setMODIFIED_ON(java.util.Date value)
    {
        setProperty(ATTR_MODIFIED_ON, value, 0);
    }

    public MSIG_USERS_MASTER getUSER_IDObject()
    {
        return (MSIG_USERS_MASTER)getSingleRelationObject(REL_USER_IDObject);
    }
    public MSIG_USERS_MASTER loadUSER_IDObject()
    {
        String queryText = "select * from \"MSIG_USERS_MASTER\" where \"USER_ID\" = :USER_ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("USER_ID", "MSIG_USERS_MASTER.USER_ID", QueryObject.PARAM_STRING, getUSER_ID());//NOPMD
        query.setResultClass(MSIG_USERS_MASTER.class);
        return (MSIG_USERS_MASTER)query.getObject();
    }


    public void setUSER_IDObject(MSIG_USERS_MASTER a_MSIG_USERS_MASTER)
    {
        if (a_MSIG_USERS_MASTER == null)
        {
            this.setNull("USER_ID");
        }
        else
        {
            this.setUSER_ID(a_MSIG_USERS_MASTER.getUSER_ID());
        }
    }

    public void setNull(String element)
    {
        super.setNull(element);
        if (ATTR_USER_ID.equals(element))
        {
            this.updateSingleRelation(REL_USER_IDObject, false);
        }
    }



    public static com.msig.masterdata.MSIG_BRANCH_LOB_ROLE_USER_MAPPING getMsigBranchLobRoleUserMappingObject(String APPLICATION, String BRANCH_CODE, String LOB_CODE, String ROLE_CODE, String USER_ID)
    {
        String queryText = "select * from \"MSIG_BRANCH_LOB_ROLE_USER_MAPPING\" where \"APPLICATION\" = :APPLICATION and \"BRANCH_CODE\" = :BRANCH_CODE and \"LOB_CODE\" = :LOB_CODE and \"ROLE_CODE\" = :ROLE_CODE and \"USER_ID\" = :USER_ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("APPLICATION", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.APPLICATION", QueryObject.PARAM_STRING, APPLICATION);//NOPMD
        query.addParameter("BRANCH_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.BRANCH_CODE", QueryObject.PARAM_STRING, BRANCH_CODE);//NOPMD
        query.addParameter("LOB_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.LOB_CODE", QueryObject.PARAM_STRING, LOB_CODE);//NOPMD
        query.addParameter("ROLE_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.ROLE_CODE", QueryObject.PARAM_STRING, ROLE_CODE);//NOPMD
        query.addParameter("USER_ID", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.USER_ID", QueryObject.PARAM_STRING, USER_ID);//NOPMD
        query.setResultClass(MSIG_BRANCH_LOB_ROLE_USER_MAPPING.class);
        return (MSIG_BRANCH_LOB_ROLE_USER_MAPPING)query.getObject();
    }

    public static BusObjectIterator<com.msig.masterdata.MSIG_BRANCH_LOB_ROLE_USER_MAPPING> getMsigBranchLobRoleUserMappingObjects(String fromAPPLICATION, String toAPPLICATION, String fromBRANCH_CODE, String toBRANCH_CODE, String fromLOB_CODE, String toLOB_CODE, String fromROLE_CODE, String toROLE_CODE, String fromUSER_ID, String toUSER_ID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"MSIG_BRANCH_LOB_ROLE_USER_MAPPING\" where \"APPLICATION\" between :fromAPPLICATION and :toAPPLICATION and \"BRANCH_CODE\" between :fromBRANCH_CODE and :toBRANCH_CODE and \"LOB_CODE\" between :fromLOB_CODE and :toLOB_CODE and \"ROLE_CODE\" between :fromROLE_CODE and :toROLE_CODE and \"USER_ID\" between :fromUSER_ID and :toUSER_ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromAPPLICATION", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.APPLICATION", QueryObject.PARAM_STRING, fromAPPLICATION);
        query.addParameter("toAPPLICATION", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.APPLICATION", QueryObject.PARAM_STRING, toAPPLICATION);
        query.addParameter("fromBRANCH_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.BRANCH_CODE", QueryObject.PARAM_STRING, fromBRANCH_CODE);
        query.addParameter("toBRANCH_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.BRANCH_CODE", QueryObject.PARAM_STRING, toBRANCH_CODE);
        query.addParameter("fromLOB_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.LOB_CODE", QueryObject.PARAM_STRING, fromLOB_CODE);
        query.addParameter("toLOB_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.LOB_CODE", QueryObject.PARAM_STRING, toLOB_CODE);
        query.addParameter("fromROLE_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.ROLE_CODE", QueryObject.PARAM_STRING, fromROLE_CODE);
        query.addParameter("toROLE_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.ROLE_CODE", QueryObject.PARAM_STRING, toROLE_CODE);
        query.addParameter("fromUSER_ID", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.USER_ID", QueryObject.PARAM_STRING, fromUSER_ID);
        query.addParameter("toUSER_ID", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.USER_ID", QueryObject.PARAM_STRING, toUSER_ID);
        query.setResultClass(MSIG_BRANCH_LOB_ROLE_USER_MAPPING.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.msig.masterdata.MSIG_BRANCH_LOB_ROLE_USER_MAPPING> getMsigBranchLobRoleUserMappingObjects(String fromAPPLICATION, String toAPPLICATION, String fromBRANCH_CODE, String toBRANCH_CODE, String fromLOB_CODE, String toLOB_CODE, String fromROLE_CODE, String toROLE_CODE, String fromUSER_ID, String toUSER_ID)
    {
        String queryText = "select * from \"MSIG_BRANCH_LOB_ROLE_USER_MAPPING\" where \"APPLICATION\" between :fromAPPLICATION and :toAPPLICATION and \"BRANCH_CODE\" between :fromBRANCH_CODE and :toBRANCH_CODE and \"LOB_CODE\" between :fromLOB_CODE and :toLOB_CODE and \"ROLE_CODE\" between :fromROLE_CODE and :toROLE_CODE and \"USER_ID\" between :fromUSER_ID and :toUSER_ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromAPPLICATION", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.APPLICATION", QueryObject.PARAM_STRING, fromAPPLICATION);
        query.addParameter("toAPPLICATION", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.APPLICATION", QueryObject.PARAM_STRING, toAPPLICATION);
        query.addParameter("fromBRANCH_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.BRANCH_CODE", QueryObject.PARAM_STRING, fromBRANCH_CODE);
        query.addParameter("toBRANCH_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.BRANCH_CODE", QueryObject.PARAM_STRING, toBRANCH_CODE);
        query.addParameter("fromLOB_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.LOB_CODE", QueryObject.PARAM_STRING, fromLOB_CODE);
        query.addParameter("toLOB_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.LOB_CODE", QueryObject.PARAM_STRING, toLOB_CODE);
        query.addParameter("fromROLE_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.ROLE_CODE", QueryObject.PARAM_STRING, fromROLE_CODE);
        query.addParameter("toROLE_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.ROLE_CODE", QueryObject.PARAM_STRING, toROLE_CODE);
        query.addParameter("fromUSER_ID", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.USER_ID", QueryObject.PARAM_STRING, fromUSER_ID);
        query.addParameter("toUSER_ID", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.USER_ID", QueryObject.PARAM_STRING, toUSER_ID);
        query.setResultClass(MSIG_BRANCH_LOB_ROLE_USER_MAPPING.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.msig.masterdata.MSIG_BRANCH_LOB_ROLE_USER_MAPPING> getMsigBranchLobRoleUserMappingObjectsForUserId(String USER_ID)
    {
        String queryText = "select * from \"MSIG_BRANCH_LOB_ROLE_USER_MAPPING\" where \"USER_ID\" = :USER_ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("USER_ID", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.USER_ID", QueryObject.PARAM_STRING, USER_ID);//NOPMD
        query.setResultClass(MSIG_BRANCH_LOB_ROLE_USER_MAPPING.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.msig.masterdata.MSIG_BRANCH_LOB_ROLE_USER_MAPPING> getNextMsigBranchLobRoleUserMappingObjects(String APPLICATION, String BRANCH_CODE, String LOB_CODE, String ROLE_CODE, String USER_ID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"MSIG_BRANCH_LOB_ROLE_USER_MAPPING\" where (\"APPLICATION\" > :APPLICATION) or (\"APPLICATION\" = :APPLICATION and \"BRANCH_CODE\" > :BRANCH_CODE) or (\"APPLICATION\" = :APPLICATION and \"BRANCH_CODE\" = :BRANCH_CODE and \"LOB_CODE\" > :LOB_CODE) or (\"APPLICATION\" = :APPLICATION and \"BRANCH_CODE\" = :BRANCH_CODE and \"LOB_CODE\" = :LOB_CODE and \"ROLE_CODE\" > :ROLE_CODE) or (\"APPLICATION\" = :APPLICATION and \"BRANCH_CODE\" = :BRANCH_CODE and \"LOB_CODE\" = :LOB_CODE and \"ROLE_CODE\" = :ROLE_CODE and \"USER_ID\" > :USER_ID) order by \"APPLICATION\" asc, \"BRANCH_CODE\" asc, \"LOB_CODE\" asc, \"ROLE_CODE\" asc, \"USER_ID\" asc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("APPLICATION", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.APPLICATION", QueryObject.PARAM_STRING, APPLICATION);//NOPMD
        query.addParameter("BRANCH_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.BRANCH_CODE", QueryObject.PARAM_STRING, BRANCH_CODE);//NOPMD
        query.addParameter("LOB_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.LOB_CODE", QueryObject.PARAM_STRING, LOB_CODE);//NOPMD
        query.addParameter("ROLE_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.ROLE_CODE", QueryObject.PARAM_STRING, ROLE_CODE);//NOPMD
        query.addParameter("USER_ID", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.USER_ID", QueryObject.PARAM_STRING, USER_ID);//NOPMD
        query.setResultClass(MSIG_BRANCH_LOB_ROLE_USER_MAPPING.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.msig.masterdata.MSIG_BRANCH_LOB_ROLE_USER_MAPPING> getPreviousMsigBranchLobRoleUserMappingObjects(String APPLICATION, String BRANCH_CODE, String LOB_CODE, String ROLE_CODE, String USER_ID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"MSIG_BRANCH_LOB_ROLE_USER_MAPPING\" where (\"APPLICATION\" < :APPLICATION) or (\"APPLICATION\" = :APPLICATION and \"BRANCH_CODE\" < :BRANCH_CODE) or (\"APPLICATION\" = :APPLICATION and \"BRANCH_CODE\" = :BRANCH_CODE and \"LOB_CODE\" < :LOB_CODE) or (\"APPLICATION\" = :APPLICATION and \"BRANCH_CODE\" = :BRANCH_CODE and \"LOB_CODE\" = :LOB_CODE and \"ROLE_CODE\" < :ROLE_CODE) or (\"APPLICATION\" = :APPLICATION and \"BRANCH_CODE\" = :BRANCH_CODE and \"LOB_CODE\" = :LOB_CODE and \"ROLE_CODE\" = :ROLE_CODE and \"USER_ID\" < :USER_ID) order by \"APPLICATION\" desc, \"BRANCH_CODE\" desc, \"LOB_CODE\" desc, \"ROLE_CODE\" desc, \"USER_ID\" desc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("APPLICATION", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.APPLICATION", QueryObject.PARAM_STRING, APPLICATION);//NOPMD
        query.addParameter("BRANCH_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.BRANCH_CODE", QueryObject.PARAM_STRING, BRANCH_CODE);//NOPMD
        query.addParameter("LOB_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.LOB_CODE", QueryObject.PARAM_STRING, LOB_CODE);//NOPMD
        query.addParameter("ROLE_CODE", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.ROLE_CODE", QueryObject.PARAM_STRING, ROLE_CODE);//NOPMD
        query.addParameter("USER_ID", "MSIG_BRANCH_LOB_ROLE_USER_MAPPING.USER_ID", QueryObject.PARAM_STRING, USER_ID);//NOPMD
        query.setResultClass(MSIG_BRANCH_LOB_ROLE_USER_MAPPING.class);
        query.setCursor(cursor);
        return query.getObjects();
    }






}
