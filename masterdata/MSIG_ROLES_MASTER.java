/*
  This class has been generated by the Code Generator
 */

package com.msig.masterdata;

import java.util.Date;

import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.DMLStatement;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.eibus.xml.nom.Node;
import com.eibus.xml.xpath.XPath;

public class MSIG_ROLES_MASTER extends MSIG_ROLES_MASTERBase {
	private static final String STATUS_INACTIVE = "INACTIVE";
	private static final String STATUS_ACTIVE = "ACTIVE";

	public MSIG_ROLES_MASTER() {
		this((BusObjectConfig) null);
	}

	public MSIG_ROLES_MASTER(BusObjectConfig config) {
		super(config);
	}

	@Override
	public void onBeforeInsert() {
		super.onBeforeInsert();

		if (this.getSTATUS() == null
				|| (this.getSTATUS() != null && this.getSTATUS().equals(""))) {
			this.setSTATUS(STATUS_ACTIVE);
		}

		this.setCREATED_BY(MasterDataUtil.getUserName());
		this.setMODIFIED_BY(MasterDataUtil.getUserName());
		this.setCREATED_ON(new Date());
		this.setMODIFIED_ON(new Date());
	}

	@Override
	public void onBeforeUpdate() {
		super.onBeforeUpdate();
		this.setMODIFIED_BY(MasterDataUtil.getUserName());
		this.setMODIFIED_ON(new Date());
	}

	@SuppressWarnings("deprecation")
	@Override
	public void onAfterUpdate() {
		super.onAfterUpdate();

		String status = this.getSTATUS();
		if (status.equals(STATUS_INACTIVE)) {
			String queryText = "UPDATE MSIG_BRANCH_LOB_ROLE_MAPPING SET STATUS = '" + STATUS_INACTIVE + "' WHERE ROLE_CODE = '" + this.getROLE_CODE() + "'";
			DMLStatement dmlObj = new DMLStatement(queryText);
			
			dmlObj.execute();
			
			queryText = "UPDATE MSIG_BRANCH_LOB_ROLE_USER_MAPPING SET STATUS = '" + STATUS_INACTIVE + "' WHERE ROLE_CODE = '" + this.getROLE_CODE() + "'";
			dmlObj = new DMLStatement(queryText);
			
			dmlObj.execute();
		}
	}

	public static BusObjectIterator<com.msig.masterdata.MSIG_ROLES_MASTER> searchRolesMaster(
			String ROLE_CODE, String ROLE_NAME) {
		ROLE_CODE = "%" + ROLE_CODE + "%";
		ROLE_NAME = "%" + ROLE_NAME + "%";

		String queryText = "SELECT * FROM MSIG_ROLES_MASTER WHERE ROLE_CODE LIKE :ROLE_CODE AND ROLE_NAME LIKE :ROLE_NAME";

		QueryObject query = new QueryObject(queryText);
		query.addParameter("ROLE_CODE", "MSIG_ROLES_MASTER.ROLE_CODE",
				QueryObject.PARAM_STRING, ROLE_CODE);
		query.addParameter("ROLE_NAME", "MSIG_ROLES_MASTER.ROLE_NAME",
				QueryObject.PARAM_STRING, ROLE_NAME);

		query.setResultClass(MSIG_ROLES_MASTER.class);
		return query.getObjects();
	}

	public static BusObjectIterator<com.msig.masterdata.MSIG_ROLES_MASTER> searchRolesMasterByApplication(
			String APPLICATION, String ROLE_CODE, String ROLE_NAME) {

		APPLICATION = "%" + APPLICATION + "%";
		ROLE_CODE = "%" + ROLE_CODE + "%";
		ROLE_NAME = "%" + ROLE_NAME + "%";

		String queryText = "SELECT * FROM MSIG_ROLES_MASTER WHERE APPLICATION LIKE :APPLICATION AND ROLE_CODE LIKE :ROLE_CODE AND ROLE_NAME LIKE :ROLE_NAME ORDER BY APPLICATION";

		QueryObject query = new QueryObject(queryText);
		query.addParameter("APPLICATION", "MSIG_ROLES_MASTER.APPLICATION",
				QueryObject.PARAM_STRING, APPLICATION);
		query.addParameter("ROLE_CODE", "MSIG_ROLES_MASTER.ROLE_CODE",
				QueryObject.PARAM_STRING, ROLE_CODE);
		query.addParameter("ROLE_NAME", "MSIG_ROLES_MASTER.ROLE_NAME",
				QueryObject.PARAM_STRING, ROLE_NAME);

		query.setResultClass(MSIG_ROLES_MASTER.class);
		return query.getObjects();
	}

	public static MSIG_ROLES_MASTER getMsigRoleRecordForName(String APPLICATION, String ROLE_NAME) {
		String queryText = "SELECT * FROM MSIG_ROLES_MASTER WHERE ROLE_NAME = :ROLE_NAME AND APPLICATION = :APPLICATION";

		QueryObject query = new QueryObject(queryText);
		query.addParameter("ROLE_NAME", "MSIG_ROLES_MASTER.ROLE_NAME", QueryObject.PARAM_STRING, ROLE_NAME);
		query.addParameter("APPLICATION", "MSIG_ROLES_MASTER.APPLICATION", QueryObject.PARAM_STRING, APPLICATION);

		query.setResultClass(MSIG_ROLES_MASTER.class);
		return (MSIG_ROLES_MASTER) query.getObject();
	}

	public static int generateRolesMasterReport(int timezoneOffset)
			throws Exception {

		String queryText = "SELECT A.APPLICATION, ROLE_CODE, ROLE_NAME, ROLE_DESCRIPTION, STATUS, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_ON FROM MSIG_ROLES_MASTER A ORDER BY APPLICATION";

		QueryObject query = new QueryObject(queryText);
		query.setResultClass(MSIG_ROLES_MASTER.class);

		BusObjectIterator<MSIG_ROLES_MASTER> objects = query.getObjects();

		if (objects == null) {
			return MasterDataUtil
					.createFaultMessage("No records in DB to download excel file");
		}

		String[] paramNames = { "key" };
		String[] paramValues = { "/MSIG/configurations/shared-path-config.xml" };

		int response = MasterDataUtil.executeSOAPRequest(
				"http://schemas.cordys.com/1.0/xmlstore", "GetXMLObject",
				paramNames, paramValues);

		if (response == 0) {
			return MasterDataUtil
					.createFaultMessage("Shared Path Configuration file is missing");
		}

		String sharedFilePath = Node
				.getData(XPath
						.getFirstMatch(
								"descendant-or-self::Configuration/descendant-or-self::SharedPath",
								null, response));

		HSSFWorkbook workbookObject = GenerateReport.getWorkbookObjectNew(
				objects, "Roles Master Report", new String[] {
						"Application", "Role Code", "Role Name",
						"Role Description", "Status", "Created By",
						"Created On", "Modified By", "Modified On" },
				new String[] { "APPLICATION", "ROLE_CODE", "ROLE_NAME",
						"ROLE_DESCRIPTION", "STATUS", "CREATED_BY",
						"CREATED_ON", "MODIFIED_BY", "MODIFIED_ON" },
				new String[] { "STRING", "STRING", "STRING", "STRING",
						"STRING", "STRING", "DATE", "STRING", "DATE" },
				timezoneOffset);
		HSSFSheet sheet = workbookObject.getSheet("Roles Master Report");
		int columnIndex = 0;
		while (columnIndex < 9) {
			sheet.autoSizeColumn(columnIndex++);
		}

		return GenerateReport.writeExcelFile(workbookObject, sharedFilePath,
				"Roles Master Report");
	}

	public static BusObjectIterator<MSIG_BRANCH_LOB_ROLE_MAPPING> checkMappingsForRole(String APPLICATION, String ROLE_CODE) {
		String queryText = "SELECT * FROM MSIG_BRANCH_LOB_ROLE_MAPPING WHERE ROLE_CODE = :ROLE_CODE AND APPLICATION = :APPLICATION";
		
		QueryObject query = new QueryObject(queryText);
		query.addParameter("ROLE_CODE", "MSIG_BRANCH_LOB_ROLE_MAPPING.ROLE_CODE", QueryObject.PARAM_STRING, ROLE_CODE);
		query.addParameter("APPLICATION", "MSIG_BRANCH_LOB_ROLE_MAPPING.APPLICATION", QueryObject.PARAM_STRING, APPLICATION);
		
		query.setResultClass(MSIG_BRANCH_LOB_ROLE_MAPPING.class);
		
		return query.getObjects();
	}
	
	public static BusObjectIterator<MSIG_ROLES_MASTER> getDistinctRoles() {
		String queryText = "SELECT DISTINCT ROLE_CODE, ROLE_NAME FROM MSIG_ROLES_MASTER";
		
		QueryObject query = new QueryObject(queryText);
		
		query.setResultClass(MSIG_ROLES_MASTER.class);
		return query.getObjects();
	}
	
	public static MSIG_ROLES_MASTER getRolesMasterObj(String APPLICATION, String ROLE_CODE) {
		String queryText = "SELECT * FROM MSIG_ROLES_MASTER WHERE BINARY_CHECKSUM(APPLICATION) = BINARY_CHECKSUM(:APPLICATION) AND BINARY_CHECKSUM(ROLE_CODE) = BINARY_CHECKSUM(:ROLE_CODE)";
		
		QueryObject query = new QueryObject(queryText);
		
		query.addParameter("APPLICATION", "MSIG_ROLES_MASTER.APPLICATION", QueryObject.PARAM_STRING, APPLICATION);
		query.addParameter("ROLE_CODE", "MSIG_ROLES_MASTER.ROLE_CODE", QueryObject.PARAM_STRING, ROLE_CODE);
		
		query.setResultClass(MSIG_ROLES_MASTER.class);
		
		return (MSIG_ROLES_MASTER) query.getObject();
	}
}
