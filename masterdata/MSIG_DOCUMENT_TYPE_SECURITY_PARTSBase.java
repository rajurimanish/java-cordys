/*
  This class has been generated by the Code Generator
*/

package com.msig.masterdata;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.classinfo.AttributeInfo;
import com.cordys.cpc.bsf.classinfo.ClassInfo;
import com.cordys.cpc.bsf.classinfo.RelationInfo_FK;
import com.cordys.cpc.bsf.listeners.constraint.NumberValidator;
import com.cordys.cpc.bsf.listeners.constraint.StringValidator;


public abstract class MSIG_DOCUMENT_TYPE_SECURITY_PARTSBase extends com.cordys.cpc.bsf.busobject.StateBusObject
{
    // tags used in the XML document
    public final static String ATTR_ID = "ID";
    public final static String ATTR_CONFIG_ID = "CONFIG_ID";
    public final static String ATTR_SOURCE_XPATH = "SOURCE_XPATH";
    public final static String ATTR_EXTRACT_PATTERN = "EXTRACT_PATTERN";
    public final static String ATTR_SEQUENCE = "SEQUENCE";
    private final static String REL_CONFIG_IDObject = "FK:MSIG_DOCUMENT_TYPE_SECURITY_PARTS[CONFIG_ID]:MSIG_DOCUMENT_TYPE_SECURITY[ID]";
    private static ClassInfo s_classInfo = null;
    public static ClassInfo _getClassInfo()//NOPMD framework ensures this is thread safe
    {
        if ( s_classInfo == null )//NOPMD
        {
            s_classInfo = newClassInfo(MSIG_DOCUMENT_TYPE_SECURITY_PARTS.class);
            s_classInfo.setTableName("MSIG_DOCUMENT_TYPE_SECURITY_PARTS");
            s_classInfo.setUIDElements(new String[]{ATTR_ID});
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ID);
                ai.setJavaName(ATTR_ID);
                ai.setColumnName(ATTR_ID);
                ai.setAttributeClass(int.class);
                NumberValidator v = new NumberValidator(ATTR_ID);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_CONFIG_ID);
                ai.setJavaName(ATTR_CONFIG_ID);
                ai.setColumnName(ATTR_CONFIG_ID);
                ai.setAttributeClass(int.class);
                NumberValidator v = new NumberValidator(ATTR_CONFIG_ID);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_SOURCE_XPATH);
                ai.setJavaName(ATTR_SOURCE_XPATH);
                ai.setColumnName(ATTR_SOURCE_XPATH);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_SOURCE_XPATH);
                v.setMaxLength(1000);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_EXTRACT_PATTERN);
                ai.setJavaName(ATTR_EXTRACT_PATTERN);
                ai.setColumnName(ATTR_EXTRACT_PATTERN);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_EXTRACT_PATTERN);
                v.setMaxLength(500);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_SEQUENCE);
                ai.setJavaName(ATTR_SEQUENCE);
                ai.setColumnName(ATTR_SEQUENCE);
                ai.setAttributeClass(int.class);
                NumberValidator v = new NumberValidator(ATTR_SEQUENCE);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                // relation CONFIG_IDObject (FK:MSIG_DOCUMENT_TYPE_SECURITY_PARTS[CONFIG_ID]:MSIG_DOCUMENT_TYPE_SECURITY[ID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_CONFIG_IDObject);
                ri.setName("CONFIG_IDObject");
                ri.setLocalAttributes(new String[]{ATTR_CONFIG_ID});
                ri.setLocalIsPK(false);
                ri.setRelatedClass(com.msig.masterdata.MSIG_DOCUMENT_TYPE_SECURITY.class);
                ri.setRelatedAttributes(new String[]{"ID"});//NOPMD
                ri.setRelatedIdentifier("FK:MSIG_DOCUMENT_TYPE_SECURITY[ID]:MSIG_DOCUMENT_TYPE_SECURITY_PARTS[CONFIG_ID]");
                ri.setLoadMethod("loadCONFIG_IDObject");
                s_classInfo.addRelationInfo(ri);
            }
        }
        return s_classInfo;
    }

    public MSIG_DOCUMENT_TYPE_SECURITY_PARTSBase(BusObjectConfig config)
    {
        super(config);
    }

    public int getID()
    {
        return getIntProperty(ATTR_ID);
    }

    public void setID(int value)
    {
        setProperty(ATTR_ID, value, 0);
    }

    public int getCONFIG_ID()
    {
        return getIntProperty(ATTR_CONFIG_ID);
    }

    public void setCONFIG_ID(int value)
    {
        String[] relations = new String[]{REL_CONFIG_IDObject};
        this.updateSingleRelations(relations, false);
        setProperty(ATTR_CONFIG_ID, value, 0);
        this.updateSingleRelations(relations, true);
    }

    public String getSOURCE_XPATH()
    {
        return getStringProperty(ATTR_SOURCE_XPATH);
    }

    public void setSOURCE_XPATH(String value)
    {
        setProperty(ATTR_SOURCE_XPATH, value, 0);
    }

    public String getEXTRACT_PATTERN()
    {
        return getStringProperty(ATTR_EXTRACT_PATTERN);
    }

    public void setEXTRACT_PATTERN(String value)
    {
        setProperty(ATTR_EXTRACT_PATTERN, value, 0);
    }

    public int getSEQUENCE()
    {
        return getIntProperty(ATTR_SEQUENCE);
    }

    public void setSEQUENCE(int value)
    {
        setProperty(ATTR_SEQUENCE, value, 0);
    }

    public MSIG_DOCUMENT_TYPE_SECURITY getCONFIG_IDObject()
    {
        return (MSIG_DOCUMENT_TYPE_SECURITY)getSingleRelationObject(REL_CONFIG_IDObject);
    }
    public MSIG_DOCUMENT_TYPE_SECURITY loadCONFIG_IDObject()
    {
        String queryText = "select * from \"MSIG_DOCUMENT_TYPE_SECURITY\" where \"ID\" = :CONFIG_ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CONFIG_ID", "MSIG_DOCUMENT_TYPE_SECURITY.ID", QueryObject.PARAM_INT, new Integer(getCONFIG_ID()));//NOPMD
        query.setResultClass(MSIG_DOCUMENT_TYPE_SECURITY.class);
        return (MSIG_DOCUMENT_TYPE_SECURITY)query.getObject();
    }


    public void setCONFIG_IDObject(MSIG_DOCUMENT_TYPE_SECURITY a_MSIG_DOCUMENT_TYPE_SECURITY)
    {
        if (a_MSIG_DOCUMENT_TYPE_SECURITY == null)
        {
            this.setNull("CONFIG_ID");
        }
        else
        {
            this.setCONFIG_ID(a_MSIG_DOCUMENT_TYPE_SECURITY.getID());
        }
    }

    public void setNull(String element)
    {
        super.setNull(element);
        if (ATTR_CONFIG_ID.equals(element))
        {
            this.updateSingleRelation(REL_CONFIG_IDObject, false);
        }
    }
    public static com.msig.masterdata.MSIG_DOCUMENT_TYPE_SECURITY_PARTS getMsigDocumentTypeSecurityPartsObject(int ID)
    {
        String queryText = "select * from \"MSIG_DOCUMENT_TYPE_SECURITY_PARTS\" where \"ID\" = :ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("ID", "MSIG_DOCUMENT_TYPE_SECURITY_PARTS.ID", QueryObject.PARAM_INT, new Integer(ID));//NOPMD
        query.setResultClass(MSIG_DOCUMENT_TYPE_SECURITY_PARTS.class);
        return (MSIG_DOCUMENT_TYPE_SECURITY_PARTS)query.getObject();
    }

    public static BusObjectIterator<com.msig.masterdata.MSIG_DOCUMENT_TYPE_SECURITY_PARTS> getMsigDocumentTypeSecurityPartsObjects(int fromID, int toID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"MSIG_DOCUMENT_TYPE_SECURITY_PARTS\" where \"ID\" between :fromID and :toID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromID", "MSIG_DOCUMENT_TYPE_SECURITY_PARTS.ID", QueryObject.PARAM_INT, new Integer(fromID));
        query.addParameter("toID", "MSIG_DOCUMENT_TYPE_SECURITY_PARTS.ID", QueryObject.PARAM_INT, new Integer(toID));
        query.setResultClass(MSIG_DOCUMENT_TYPE_SECURITY_PARTS.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.msig.masterdata.MSIG_DOCUMENT_TYPE_SECURITY_PARTS> getMsigDocumentTypeSecurityPartsObjects(int fromID, int toID)
    {
        String queryText = "select * from \"MSIG_DOCUMENT_TYPE_SECURITY_PARTS\" where \"ID\" between :fromID and :toID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromID", "MSIG_DOCUMENT_TYPE_SECURITY_PARTS.ID", QueryObject.PARAM_INT, new Integer(fromID));
        query.addParameter("toID", "MSIG_DOCUMENT_TYPE_SECURITY_PARTS.ID", QueryObject.PARAM_INT, new Integer(toID));
        query.setResultClass(MSIG_DOCUMENT_TYPE_SECURITY_PARTS.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.msig.masterdata.MSIG_DOCUMENT_TYPE_SECURITY_PARTS> getMsigDocumentTypeSecurityPartsObjectsForConfigId(int CONFIG_ID)
    {
        String queryText = "select * from \"MSIG_DOCUMENT_TYPE_SECURITY_PARTS\" where \"CONFIG_ID\" = :CONFIG_ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CONFIG_ID", "MSIG_DOCUMENT_TYPE_SECURITY_PARTS.CONFIG_ID", QueryObject.PARAM_INT, new Integer(CONFIG_ID));//NOPMD
        query.setResultClass(MSIG_DOCUMENT_TYPE_SECURITY_PARTS.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.msig.masterdata.MSIG_DOCUMENT_TYPE_SECURITY_PARTS> getNextMsigDocumentTypeSecurityPartsObjects(int ID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"MSIG_DOCUMENT_TYPE_SECURITY_PARTS\" where (\"ID\" > :ID) order by \"ID\" asc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("ID", "MSIG_DOCUMENT_TYPE_SECURITY_PARTS.ID", QueryObject.PARAM_INT, new Integer(ID));//NOPMD
        query.setResultClass(MSIG_DOCUMENT_TYPE_SECURITY_PARTS.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.msig.masterdata.MSIG_DOCUMENT_TYPE_SECURITY_PARTS> getPreviousMsigDocumentTypeSecurityPartsObjects(int ID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"MSIG_DOCUMENT_TYPE_SECURITY_PARTS\" where (\"ID\" < :ID) order by \"ID\" desc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("ID", "MSIG_DOCUMENT_TYPE_SECURITY_PARTS.ID", QueryObject.PARAM_INT, new Integer(ID));//NOPMD
        query.setResultClass(MSIG_DOCUMENT_TYPE_SECURITY_PARTS.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

}
